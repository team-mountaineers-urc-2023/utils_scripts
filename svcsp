#!/usr/bin/env python3

from git import Repo
import subprocess
import time
import sys
import argparse

parser = argparse.ArgumentParser(description='Slow pulls all found repos recursively',
		formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('--path', type=str, default='~/workspace-wanderer/src',
                    help='base path of your repo')
parser.add_argument('--time', type=int, default=3,
					help='time to wait between pulling')
parser.add_argument('--tries', type=int, default=5,
					help='number of attempts to spend pulling one repo')

args = parser.parse_args()


dirs = subprocess.run(f'find {args.path} -name .git -type d -prune', shell=True, stdout=subprocess.PIPE, text=True).stdout.splitlines()
repos = set(Repo(x[:-5]) for x in dirs)


for repo in repos:
	time.sleep(args.time)
	if repo.is_dirty():
		# print(repo.repo)
		continue
	for i in range(args.tries):
		try:
			origin = repo.remotes.origin
			ret = origin.pull()
			print('.', end='')
			sys.stdout.flush()
			break
		except Exception as e:
			if i == args.tries-1:
				print('E', end='')
				sys.stdout.flush()
				break
			print('R', end='')
			sys.stdout.flush()
			time.sleep(8)
	
print()